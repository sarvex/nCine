if(EXISTS ${CMAKE_SCRIPT_MODE_FILE})
	# Executing CMake in script mode (using -P)
	get_filename_component(TARGET_DIR ${TARGET_FILE} DIRECTORY)
	get_filename_component(TARGET_NAME ${TARGET_FILE} NAME)

	execute_process(
		COMMAND ${BREAKPAD_DUMP_SYMS} ${TARGET_FILE}
		WORKING_DIRECTORY ${TARGET_DIR}
		RESULT_VARIABLE DUMP_FAIL
		ERROR_VARIABLE DUMP_ERROR
		OUTPUT_FILE ${TARGET_FILE}.sym)

	if(NOT DUMP_FAIL)
		execute_process(
			COMMAND ${BREAKPAD_DUMP_SYMS} -i ${TARGET_FILE}
			WORKING_DIRECTORY ${TARGET_DIR}
			RESULT_VARIABLE INFO_FAIL
			ERROR_VARIABLE INFO_ERROR
			OUTPUT_VARIABLE MODULE_HEADER_INFO)

		if(NOT INFO_FAIL)
			string(REPLACE "\nINFO" " INFO" MODULE_HEADER_INFO ${MODULE_HEADER_INFO})
			string(REPLACE " " ";" MODULE_HEADER_INFO_LIST ${MODULE_HEADER_INFO})
			list(GET MODULE_HEADER_INFO_LIST 0 MODULE_KEYWORD)
			list(GET MODULE_HEADER_INFO_LIST 1 OPERATING_SYSTEM)
			list(GET MODULE_HEADER_INFO_LIST 2 ARCHITECTURE)
			list(GET MODULE_HEADER_INFO_LIST 3 MODULE_ID)
			list(GET MODULE_HEADER_INFO_LIST 4 MODULE_NAME)

			message(STATUS "Dumped symbols for ${MODULE_NAME} (${OPERATING_SYSTEM}, ${ARCHITECTURE}) with id ${MODULE_ID}")
			file(MAKE_DIRECTORY ${DESTINATION_DIR}/${MODULE_NAME}/${MODULE_ID}/)
			file(RENAME ${TARGET_FILE}.sym ${DESTINATION_DIR}/${MODULE_NAME}/${MODULE_ID}/${TARGET_NAME}.sym)
		else()
			file(REMOVE ${TARGET_FILE}.sym)
			message(SEND_ERROR "${INFO_ERROR}")
		endif()
	else()
		message(SEND_ERROR "${DUMP_ERROR}")
	endif()
else()
	if(NCINE_WITH_CRASHPAD)
		function(add_dump_syms_command TARGET_NAME)
			if(EXISTS ${BREAKPAD_DUMP_SYMS})
				add_custom_command(TARGET ${TARGET_NAME} POST_BUILD
					COMMAND ${CMAKE_COMMAND}
						-D TARGET_FILE=$<TARGET_FILE:${TARGET_NAME}>
						-D BREAKPAD_DUMP_SYMS=${BREAKPAD_DUMP_SYMS}
						-D DESTINATION_DIR=${CMAKE_BINARY_DIR}/symbols
						-P ${CMAKE_SOURCE_DIR}/cmake/ncine_dump_syms.cmake)
			endif()
		endfunction()
	else()
		function(add_dump_syms_command TARGET_NAME)
		endfunction()
	endif()
endif()
